如何利用程序方便地完成连载资源阅读情况的管理。

我们常常需要持续关注网上的多种信息来源，而这些信息常常在不同的网站上连载（如小说、电子文档等）。手动维护收藏夹或是资源列表会造成较大的心智负担，也不便于实时记录阅读进度。因此我们设想，是否能设计一个程序，以统一的界面提供连载资源阅读情况的管理功能。

网页连载阅读信息管理程序的设计

# 课题/项目背景（研究的意义和目的）

  组员刘怀轩曾经使用一台 Macbook 笔记本，后来它坏了，只能进入恢复模式。在暂时没有新电脑用的情况下，他写了一些 bash 脚本来看小说。这个短小的脚本仅仅是分析小说网页的 HTML，获得上一页和下一页的链接，以此实现了翻页功能。后来，他意识到利用“小说网页代码中可以找到相邻页的地址”这一简单的原理，却可以实现很有趣的功能。所以他把 bash 脚本迁移到了 Node.js，并和其他组员开始合作改进这个项目。项目相对稳定后，我们将它开源到了 GitHub，随后持续更新。

  在开发的过程中，我们很快意识到这一原理是普遍的，可以运用在一切连载的文本资源上，而不局限于阅读小说。

  在某个早期版本，我们加入了书架功能，使用体验很好。从中我们也发现了这一项目主要的意义：以统一的用户界面，提供连载文本资源阅读情况的管理功能。

  这意味着：
  1) 使用本项目阅读连载文本，用户不再需要登录各个网站，并将阅读进度保存到各网站独立的书架或阅读列表中。
  2) 用户可以获得总体的阅读统计信息：如一天、一月阅读了多少章节/页，以及花费了多少时间等等。
  3) 用户可以高效地一键跟踪不同信息来源的更新情况。

  而这也是当今时代碎片化阅读的一些痛点。

# 调查研究或实践的内容、方法和实施过程

# 具体任务

# 所需设备

# 完成课题/项目有利的条件分析

# 预计困难（包括相应措施）

# 预期成果
